version: '3.8'


services:
  plugin:
    build: .
    container_name: project_plugin
    # Генерируем protobuf (если нужен) и запускаем gRPC plugin server
    command: /bin/sh -c "python -m grpc_tools.protoc -I./plugins --python_out=./plugins --grpc_python_out=./plugins ./plugins/plugin.proto || true && python plugins/plugin_server.py"
    volumes:
      - ./:/app
    ports:
      - "50051:50051"
    env_file:
      - .env
    restart: unless-stopped


  web:
    build: .
    container_name: project_web
    # Перед стартом uvicorn также генерируем pb (на случай, если backend импортирует plugin_pb2)
    command: /bin/sh -c "python -m grpc_tools.protoc -I./plugins --python_out=./plugins --grpc_python_out=./plugins ./plugins/plugin.proto || true && uvicorn backend.app:app --reload --host 0.0.0.0 --port 8000"
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - plugin
    restart: unless-stopped


# Примечание: в режиме разработки мы монтируем весь проект внутрь контейнера
# (volumes) чтобы `--reload` работал и изменения на хосте применялись сразу.